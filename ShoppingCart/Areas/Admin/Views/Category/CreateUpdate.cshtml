@model Models.ViewModels.CategoryVM

<form method="post" asp-action="CreateUpdate">@*we does required to write this -> asp-action="CreateUpdate because bydefault CreateUpdate action method comes here"*@
    <input type="hidden" asp-for="Category.Id" />@*jab ham edit karen tab hamari id as a hidden field yahan se jani chaiye*@
    <div class="border p-3 mt-4">
        <div class="row pb-3">
            <h2 class="text-primary">@((Model.Category==null || Model.Category.Id==0) ?"Create":"Update") Category</h2>@*this is a turnary operator using by id*@
            <hr/>
        </div>
        <div asp-validation-summary=All></div>
        <div class="row mb-3">
            <label asp-for="Category.Name"></label>@*here our Model Prop is binded with null values when we sent values then our values bind over here*@
            <input asp-for="Category.Name" class="form-control" />
            <span asp-validation-for="Category.Name" class="text-danger"></span>
        </div>
        <div class="row mb-3">
            <label asp-for="Category.DisplayOrder"></label>
            <input asp-for="Category.DisplayOrder" class="form-control" />
            <span asp-validation-for="Category.DisplayOrder" class="text-danger"></span>
        </div>
        @if(Model.Category==null || Model.Category.Id==0)//condition on btn
        {
            <button class="btn btn-primary" type="submit">Create</button>
        }
        else
        {
            <button class="btn btn-primary" type="submit">Update</button>
        }        
    </div>
    <a asp-action="Index" asp-controller="category">Back to List</a>
</form>

@section scripts{
    @{//@ <- with the use of verbetim literal we use our code section(cs section)
        <partial name="_ValidationScriptsPartial"/>@*this _ValidationScriptsPartial file we use for Client side validation <- is file ke throw hamari client side validatin automatically call ho jaegi*@
    }
}